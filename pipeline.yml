jobs:
- name: deploy-nessus-manager-production
  plan:
  - aggregate:
    - get: master-bosh-root-cert
    - get: nessus-manager-config
      trigger: true
    - get: common-prod
    - get: cg-s3-nessus-manager-release
    - get: nessus-manager-stemcell
    - get: terraform-yaml
  - task: nessus-manager-manifest
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: 18fgsa/concourse-task
      inputs:
      - name: nessus-manager-config
      - name: common-prod
      - name: terraform-yaml
      run:
        path: nessus-manager-config/generate.sh
        args: ["common-prod/secrets.yml", "terraform-yaml/state.yml", "merged-manifest/manifest.yml"]
      outputs:
      - name: merged-manifest
  - put: nessus-manager-production-deployment
    params:
      cert: master-bosh-root-cert/master-bosh.crt
      manifest: merged-manifest/manifest.yml
      releases:
      - cg-s3-nessus-manager-release/nessus-manager*.tgz
      stemcells:
      - nessus-manager-stemcell/*.tgz
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy nessus-manager on production
        <https://$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed nessus-manager on production
        <https://$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

resources:
- name: master-bosh-root-cert
  type: s3
  source:
    access_key_id: {{nessus-manager-private-access-key-id-production}}
    bucket: {{nessus-manager-private-bucket-production}}
    region_name: {{aws-region}}
    secret_access_key: {{nessus-manager-private-secret-access-key-production}}
    versioned_file: master-bosh.crt

- name: common-prod
  type: cg-common
  source:
    bucket_name: {{nessus-manager-private-bucket-production}}
    access_key_id: {{nessus-manager-private-access-key-id-production}}
    secret_access_key: {{nessus-manager-private-secret-access-key-production}}
    secrets_file: nessus-manager.yml
    secrets_passphrase: {{nessus-manager-production-private-passphrase}}
    bosh_cert: bosh-tooling.pem
    region: {{aws-region}}

- name: cg-s3-nessus-manager-release
  type: s3
  source:
    access_key_id: {{s3-bosh-releases-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: nessus-manager-(.*).tgz
    secret_access_key: {{s3-bosh-releases-secret-access-key}}
    region_name: {{aws-region}}

- name: nessus-manager-config
  type: git
  source:
    uri: {{cg-deploy-nessus-manager-git-url}}
    branch: {{cg-deploy-nessus-manager-git-branch}}

- name: nessus-manager-stemcell
  type: s3
  source:
    access_key_id: {{stemcell-access-key-id}}
    bucket: {{stemcell-bucket}}
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
    region_name: {{aws-region}}
    secret_access_key: {{stemcell-access-key}}

- name: nessus-manager-production-deployment
  type: 18f-bosh-deployment
  source:
    target: {{nessus-manager-production-deployment-bosh-target}}
    username: {{nessus-manager-production-deployment-bosh-username}}
    password: {{nessus-manager-production-deployment-bosh-password}}
    deployment: {{nessus-manager-production-deployment-bosh-deployment}}
    ignore_ssl: false

- name: terraform-yaml
  type: s3-iam
  source:
    bucket: {{tf-state-bucket-tooling}}
    versioned_file: {{tf-state-file-tooling}}
    region_name: {{aws-region}}

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: 18f-bosh-deployment
  type: docker-image
  source:
    repository: 18fgsa/bosh-deployment-resource

- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource
